// pvp_Class0.h - generated by pvcam2param.pl. Do not Edit.

  bool availDdInfoLength() throw(pvpException);
  pvpAccess accessDdInfoLength() throw(pvpException);
  short getDdInfoLength() throw(pvpException);
  short minDdInfoLength() throw(pvpException);
  short maxDdInfoLength() throw(pvpException);
  short defaultDdInfoLength() throw(pvpException);
  short stepDdInfoLength() throw(pvpException);
  int countDdInfoLength() throw(pvpException);
  void setDdInfoLength(short) throw(pvpException);
  void reportDdInfoLength() throw(pvpException);

  bool availDdVersion() throw(pvpException);
  pvpAccess accessDdVersion() throw(pvpException);
  unsigned short getDdVersion() throw(pvpException);
  unsigned short minDdVersion() throw(pvpException);
  unsigned short maxDdVersion() throw(pvpException);
  unsigned short defaultDdVersion() throw(pvpException);
  unsigned short stepDdVersion() throw(pvpException);
  int countDdVersion() throw(pvpException);
  void setDdVersion(unsigned short) throw(pvpException);
  void reportDdVersion() throw(pvpException);

  bool availDdRetries() throw(pvpException);
  pvpAccess accessDdRetries() throw(pvpException);
  unsigned short getDdRetries() throw(pvpException);
  unsigned short minDdRetries() throw(pvpException);
  unsigned short maxDdRetries() throw(pvpException);
  unsigned short defaultDdRetries() throw(pvpException);
  unsigned short stepDdRetries() throw(pvpException);
  int countDdRetries() throw(pvpException);
  void setDdRetries(unsigned short) throw(pvpException);
  void reportDdRetries() throw(pvpException);

  bool availDdTimeout() throw(pvpException);
  pvpAccess accessDdTimeout() throw(pvpException);
  unsigned short getDdTimeout() throw(pvpException);
  unsigned short minDdTimeout() throw(pvpException);
  unsigned short maxDdTimeout() throw(pvpException);
  unsigned short defaultDdTimeout() throw(pvpException);
  unsigned short stepDdTimeout() throw(pvpException);
  int countDdTimeout() throw(pvpException);
  void setDdTimeout(unsigned short) throw(pvpException);
  void reportDdTimeout() throw(pvpException);

  bool availDdInfo() throw(pvpException);
  pvpAccess accessDdInfo() throw(pvpException);
  QString getDdInfo() throw(pvpException);
  QString minDdInfo() throw(pvpException);
  QString maxDdInfo() throw(pvpException);
  QString defaultDdInfo() throw(pvpException);
  QString stepDdInfo() throw(pvpException);
  int countDdInfo() throw(pvpException);
  void setDdInfo(QString) throw(pvpException);
  void reportDdInfo() throw(pvpException);

  void reportClass0() throw(pvpException);
